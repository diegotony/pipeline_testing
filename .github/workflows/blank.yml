on: [push]

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1


      - name : Check Changes in Dirs
        run: |
          # TODO
          # not control changes with this git diff, maybe monitor with dirs
          # DIRS="$(git diff  --name-only  ${{ github.event.before }} ${{ github.event.after }} | sed 's/M//' | sed 's/A//' | sed 's/D//' | sed 's/\s/,/')"
          DIRS="$(git diff --name-status main | sed 's/M//' | sed 's/A//' | sed 's/D//' | sed 's/\s/,/')"
          TFSTATE_BUCKET="constant1n396-main-us-east-2-terraform-state" # tf_environments
          TFSTATE_KEY="production/terraform.tfstate" #  "terraform.tfstate"
          echo "holi"
          ls

          # DIRS="${DIRS:1}"
          # DIRS=($(echo ${DIRS} | tr "," "\n"))
          # for file in ${EXCLUDE_FILES[@]}; do
          #   DIRS=("${DIRS[@]/$file}")
          # done
          
          # for file in ${DIRS[@]}; do
          #   echo "$file"
          # done

          echo "enter to dir"
          cd production/
          echo "Initialization"
          terraform init
          echo "Planning"
          terraform plan
          echo "Applyng"
          terraform apply -auto-approve 
          # echo ${DIRS:1}


          # OUtput values
          # regex to remove file in path ([\w])+(\.([\w])+)
          # TODO remove repeat paths
          # TODO validate that only uniques paths
          # TODO function for terraform init with TF vars
          # TODO : check if is dir and set conditions in pipelines like aws and s3 in other word tf vars

          # echo "${DIRS[*]}"
          # echo "${#DIRS[@]}"
        env: 
          EXCLUDE_FILES: ".github/workflows/blank.yml README.md"
          MAIN_BRANCH: "main"
