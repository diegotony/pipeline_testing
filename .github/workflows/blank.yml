on: [push]

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # - name: List all changed files
      #   run: |
      #     for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
      #       echo "$file was changed"
      #     done

      - name : Check Changes in Dirs
        run: |
          # TODO
          # not control changes with this git diff, maybe monitor with dirs
          # DIRS="$(git diff  --name-only  ${{ github.event.before }} ${{ github.event.after }} | sed 's/M//' | sed 's/A//' | sed 's/D//' | sed 's/\s/,/')"
          DIRS="$(git diff --name-status main | sed 's/M//' | sed 's/A//' | sed 's/D//' | sed 's/\s/,/')"
          TFSTATE_BUCKET="" # tf_environments
          TFSTATE_KEY="" #  "terraform.tfstate"
          TFSTATE_REGION="" # us-east-1

          # echo ${DIRS:1}
          DIRS="${DIRS:1}"
          DIRS=($(echo ${DIRS} | tr "," "\n"))
          echo "here"
          for file in ${EXCLUDE_FILES[@]}; do
            DIRS=("${DIRS[@]/$file}")
          done
          
          for file in ${DIRS[@]}; do
            echo "$file"
          done

          # OUtput values
          # regex to remove file in path ([\w])+(\.([\w])+)
          # TODO remove repeat paths
          # TODO validate that only uniques paths
          # TODO function for terraform init with TF vars
          # TODO : check if is dir and set conditions in pipelines like aws and s3 in other word tf vars

          # echo "${DIRS[*]}"
          # echo "${#DIRS[@]}"
        env: 
          EXCLUDE_FILES: ".github/workflows/blank.yml README.md"
          MAIN_BRANCH: "main"
      # # - name: Init
      #   run: |
      #     terraform init

      # - name: Plan
      #   run: |
      #     terraform plan